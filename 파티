import sys
import heapq



n,m,x= map(int,input().split())

graph=[[] for _ in range(n+1)]
INF=1e9
for i in range(m):
    a,b,w= map(int,input().split())
    graph[a].append((b,w))


def dijkstra(start):
    distance=[INF]*(n+1)

    distance[start]=0
    q=[]
    heapq.heappush(q,(0,start))

    while q :
        dist, now = heapq.heappop(q)

        if dist > distance[now]:
            continue
        for i in graph[now]:
            cost = dist + i[1]
            if cost < distance[i[0]]:
                distance[i[0]] = cost 
                heapq.heappush(q,(cost,i[0]))
    return distance

answer=0
for start in range(1,n+1):
    answer= max(dijkstra(start)[x] + dijkstra(x)[start],answer)
print(answer)
