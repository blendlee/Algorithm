import sys

input=sys.stdin.readline
sys.setrecursionlimit(10000)
n=int(input())
graph=[]

for i in range(n):
    graph.append(list(map(int,input().split())))

dx=[1,0,-1,0]
dy=[0,1,0,-1]



def dfs(x,y,target):
    for i in range(4):
        nx=x+dx[i]
        ny=y+dy[i]
        if 0<= nx <n and 0<=ny<n:
            if visited[nx][ny]==0 and graph[nx][ny] >target:
                visited[nx][ny]=1
                dfs(nx,ny,target)

result=0
for target in range(max(map(max,graph))):
    answer=0
    visited=[[0]*n for _ in range(n)]
    for i in range(n):
        for j in range(n):
            if graph[i][j] > target and visited[i][j]==0:
                visited[i][j]=1
                dfs(i,j,target)
                answer+=1

    result=max(result,answer)

print(result)
