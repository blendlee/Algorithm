from collections import deque

n= int(input())
graph=[]
for i in range(n):
    graph.append(list(map(int,input().split())))


visited=[[False]*n for _ in range(n)]

dx=[1,0,-1,0]
dy=[0,1,0,-1]

lands=[[],[],[]]
land=2
minimum=10000000
for i in range(n):
    for j in range(n):
        if graph[i][j] ==1 :
            q=deque() 
            q.append((i,j,land))
            while q :
                x, y, land = q.popleft() 
                for k in range(4):
                    nx = x+dx[k]
                    ny = y+dy[k]
                    if 0<= nx < n and 0<= ny < n :
                        if visited[nx][ny] == False and graph[nx][ny] != 0 :
                            visited[nx][ny] = True
                            graph[nx][ny] =-land
                            q.append((nx,ny,land))
                            
                        if graph[nx][ny] == 0:
                            graph[x][y] = land
                            if (x,y) not in lands[land]:
                                lands[land].append((x,y))
            land+=1
            lands.append([])

for i in range(2,land-1):
    for j in range(i+1,land):
        for a,b in lands[i]:
            for c,d in lands[j]:
                minimum= min(abs(a-c)+abs(b-d)-1,minimum)


print(minimum)
