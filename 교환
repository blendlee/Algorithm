from collections import deque



n,k= map(int,input().split())
first=n



q=deque()
count=0
q.append((n,count))


result=0
answer=[]
visited={n:1}

while q:
    n,count=q.popleft()
    if count==k :
        break
    s=str(n)
    graph=list(s)
    for i in range(len(graph)):
        for j in range(len(graph)):
            if i != j:
                graph[i],graph[j]=graph[j],graph[i]
                next_n=int(''.join(graph))

                if next_n > result and not visited.get(next_n):
                    q.append((next_n,count+1))
                    visited[next_n]=count+1
                    if count+1 ==k:
                        answer.append(next_n)
                graph[j],graph[i]=graph[i],graph[j]
    result=max(result,n)


if 0<first<10  or (10<=first<100 and first%10 == 0):
    print(-1)

else:
    if count==k:
        if len(set(list(str(result)))) == len(list(str(result))):
            print(max(answer))
        else:
            print(max(visited))



    elif count < k :
        if (k-visited[result])%2==1 and len(set(list(str(result)))) == len(list(str(result))):
            l=list(str(result))
            l[-1],l[-2]=l[-2],l[-1]
            print(int(''.join(l)))
        else:
            print(result)
