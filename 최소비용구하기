import heapq
import sys

input = sys.stdin.readline
n=int(input())
m=int(input())

graph=[[] for _ in range(n+1)]

for i in range(m):
    a,b,w = map(int,input().split())

    graph[a].append((b,w))


s,e=map(int,input().split())


INF=1e9
distance=[INF]*(n+1)

q=[]


def dijkstra(start):
    q=[]
    heapq.heappush(q,(0,start))
    distance[start]=0
    

    while q:
        dist, now = heapq.heappop(q)
        if distance[now] < dist :
            continue
        for i in graph[now]:
            cost = dist +i[1]
            if cost < distance[i[0]] :
                distance[i[0]] = cost
                heapq.heappush(q,(cost,i[0]))

dijkstra(s)
print(distance[e])
